@model Domus.Web.UI.Models.Recipes.SelectedRecipeViewModel

@{
    ViewBag.Title = Model.Recipe.Name;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="recipeSearch">
@using (@Html.BeginForm("Index", "Recipe"))
{
    @Html.TextBoxFor(m=>m.SearchText)
    <input id="searchButton" type="submit" value="Search"/>
}
</div>
<div id="container">
<div id="recipeCategories">
    @Html.Partial("Categories",Model.Categories)
        <br/>
    <br/>
    @Html.ActionLink("Add Recipe","Create",new{},new{id="createButton"})
</div>

<div id="recipeEditor">
    @using (Html.BeginForm("Save", "Recipe", FormMethod.Post))
    {
        @Html.ValidationSummary(true)
        <fieldset>
            @Html.ValidationSummary(true)

            @Html.HiddenFor(model => model.Recipe.RecipeId)

            <div class="editor-label">@Html.LabelFor(model => model.Recipe.Name)</div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Recipe.Name)
                @Html.ValidationMessageFor(model => model.Recipe.Name)
            </div>

            <div class="editor-label"> @Html.LabelFor(model => model.Recipe.Servings)</div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Recipe.Servings)
                @Html.ValidationMessageFor(model => model.Recipe.Servings)
            </div>

            <div class="editor-label"> @Html.LabelFor(model => model.Recipe.Rating)</div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Recipe.Rating)
                @Html.ValidationMessageFor(model => model.Recipe.Rating)
            </div>

            <div class="editor-label">@Html.LabelFor(model => model.Recipe.Category)</div>
            <div class="editor-field">
                @Html.DropDownListFor(model=>model.Recipe.Category,new SelectList(Model.Categories,"Description","Description",Model.Categories.First().Description))
                @Html.ValidationMessageFor(model => model.Recipe.Category)
            </div>

            <div class="editor-label">@Html.LabelFor(model => model.Recipe.Ingredients)</div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Recipe.Ingredients)
                @Html.ValidationMessageFor(model => model.Recipe.Ingredients)
            </div>

            <div class="editor-label">@Html.LabelFor(model => model.Recipe.Directions)</div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Recipe.Directions)
                @Html.ValidationMessageFor(model => model.Recipe.Directions)
            </div>

            <div class="editor-label"> @Html.LabelFor(model => model.Recipe.Source)</div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Recipe.Source)
                @Html.ValidationMessageFor(model => model.Recipe.Source)
            </div>

            <input id="saveButton" type="submit" value="Save" />
            &nbsp;
            @Html.ActionLink("Cancel","Detail",new{recipeId = Model.Recipe.RecipeId},new{id="cancelButton"})

        </fieldset>
    }
</div>
</div>
<script src="@Url.Content("~/Scripts/RecipeEdit.js")" type="text/javascript"></script>
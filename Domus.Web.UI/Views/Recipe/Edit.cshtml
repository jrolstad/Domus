@model Domus.Web.UI.Models.Recipes.SelectedRecipeViewModel

@{
    ViewBag.Title = Model.Recipe.Name;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="recipeSearch">
@using (@Html.BeginForm("Index", "Recipe"))
{
    @Html.TextBoxFor(m => m.SearchText)
    <input id="searchButton" type="submit" value="Search"/>
}
</div>

<table id="container">
    <tr>
        <td id="categoryColumn">
            <div id="recipeCategories">
                @Html.Partial("Categories", Model.Categories)
            </div>
        </td>
        <td>
            <div id="recipeEditor">
                @using (Html.BeginForm("Save", "Recipe", FormMethod.Post))
                {
                   
                    <fieldset>
                    @Html.ValidationSummary(true)
                    
                        @Html.ValidationSummary(true)

                        @Html.HiddenFor(model => model.Recipe.RecipeId)

                        <div class="editor-label">@Html.LabelFor(model => model.Recipe.Name)</div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.Recipe.Name)
                            @Html.ValidationMessageFor(model => model.Recipe.Name)
                        </div>

                        <div class="editor-label"> @Html.LabelFor(model => model.Recipe.Servings)</div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.Recipe.Servings)
                            @Html.ValidationMessageFor(model => model.Recipe.Servings)
                        </div>

                        <div class="editor-label"> @Html.LabelFor(model => model.Recipe.Rating)</div>
                        <div class="editor-field">
                            @Html.DropDownListFor(model => model.Recipe.Rating, new SelectList(new List<int>{1,2,3,4,5}))
                             @Html.ValidationMessageFor(model => model.Recipe.Rating)
                        </div>

                        <div class="editor-label">@Html.LabelFor(model => model.Recipe.Category)</div>
                        <div class="editor-field">
                            @Html.DropDownListFor(model => model.Recipe.Category, new SelectList(Model.Categories, "Description", "Description", Model.Categories.First().Description))
                            @Html.ValidationMessageFor(model => model.Recipe.Category)
                        </div>

                        <div class="editor-label">@Html.LabelFor(model => model.Recipe.Ingredients)</div>
                        <div class="editor-field">
                            @Html.TextAreaFor(model => model.Recipe.Ingredients)
                            @Html.ValidationMessageFor(model => model.Recipe.Ingredients)
                        </div>

                        <div class="editor-label">@Html.LabelFor(model => model.Recipe.Directions)</div>
                        <div class="editor-field">
                            @Html.TextAreaFor(model => model.Recipe.Directions)
                            @Html.ValidationMessageFor(model => model.Recipe.Directions)
                        </div>

                        <div class="editor-label"> @Html.LabelFor(model => model.Recipe.Source)</div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.Recipe.Source)
                            @Html.ValidationMessageFor(model => model.Recipe.Source)
                        </div>

                        <input id="saveButton" type="submit" value="Save" />
                        &nbsp;
                        @Html.ActionLink("Cancel", "Detail", new { recipeId = Model.Recipe.RecipeId }, new { id = "cancelButton" })

                    </fieldset>
                }
            </div>  
        </td>
    </tr>
</table>
<script src="@Url.Content("~/Scripts/RecipeEdit.js")" type="text/javascript"></script>
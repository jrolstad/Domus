@model Domus.Web.UI.Models.Recipes.SelectedRecipeViewModel

@{
    ViewBag.Title = Model.Recipe.Name;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="recipeSearch">
@using (@Html.BeginForm("Index", "Recipe"))
{
    <table width="99%">
        <tr>
            <td>
                @Html.TextBoxFor(m=>m.SearchText)
                <input id="searchButton" type="submit" value="Search"/>
            </td>
            
            <td style="text-align: right;">
                <a href="@Url.Action("Index")">
               <img src="@Url.Content("~/Content/home_button.png")" alt="Home"/>
               </a>
              
            </td>
    </tr>
    </table>
}
</div>

<table id="container">
    <tr>
        <td id="categoryColumn">
            <div id="recipeCategories">
                @Html.Partial("Categories", Model.Categories)
                <br/>
                <br/>
                 @Html.ActionLink("Add Recipe","Create",new{},new{id="createButton"})
            </div>
            <br/>
        </td>
        <td>
            <div id="recipeDetails">

                @Html.HiddenFor(model => model.Recipe.RecipeId)

                <div class="display-title">
                    <table>
                        <tr>
                            
                            <td> <p>@Html.DisplayFor(model => model.Recipe.Name)</p></td>
                            <td style="vertical-align: middle">
                                &nbsp;&nbsp;@Html.Partial("RatingWidget", Model.Recipe.Rating.GetValueOrDefault())
                                &nbsp;&nbsp;@Html.ActionLink("Edit", "Edit", new { recipeId = Model.Recipe.RecipeId }, new { id = "editButton" })
                            </td>
                        </tr>
                    </table>
                    <hr/>
                </div>
                
                <div class="display-field">Servings:&nbsp;@Html.DisplayFor(model => model.Recipe.Servings)</div>

                <div class="display-label">Ingredients</div>
                <div class="display-field">@Html.Raw((Model.Recipe.Ingredients ?? "").Replace(Environment.NewLine, "<br/>"))</div>

                <div class="display-label">Directions</div>
    
                <div class="display-field">@Html.Raw((Model.Recipe.Directions ?? "").Replace(Environment.NewLine, "<br/>"))</div>

                 <div class="display-label">Source</div>
                <div class="display-field">
                    @if (Model.Recipe.Source != null &&
                        Model.Recipe.Source.StartsWith("http"))
                    {
                        <a href="@Model.Recipe.Source" target="new">@Model.Recipe.Source</a>
                    }
                    else
                    {
                        @Html.DisplayFor(model => model.Recipe.Source)
                    }
     
                 </div>
            </div>
        </td>
    </tr>
</table>
<script src="@Url.Content("~/Scripts/RecipeDetails.js")" type="text/javascript"></script>
